// This file is auto-generated by @hey-api/openapi-ts

export const SignInDtoSchema = {
  type: 'object',
  properties: {
    username: {
      type: 'string',
      description: '管理人员名称',
      example: 'admin',
    },
    password: {
      type: 'string',
      description: '密码',
      example: '123456',
    },
    email: {
      type: 'string',
      description: '邮箱',
      example: 'admin@email.com',
    },
  },
  required: ['password'],
} as const;

export const AdmintorsResultDtoSchema = {
  type: 'object',
  properties: {
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    username: {
      type: 'string',
      description: '管理人员名称',
      example: 'admin',
    },
    avatar: {
      type: 'string',
      description: '头像',
      example: '',
    },
    name: {
      type: 'string',
      description: '姓名',
      example: '',
    },
    roles: {
      description: '角色',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
    sex: {
      type: 'string',
      description: '性别',
      example: 'Male',
      enum: ['Male', 'Female'],
    },
    phone: {
      type: 'string',
      description: '电话号码',
      example: '',
    },
    email: {
      type: 'string',
      description: '邮箱',
      example: '',
    },
    status: {
      type: 'string',
      description: '状态',
      example: 'Open',
      enum: ['Open', 'Close'],
    },
    _id: {
      type: 'string',
      description: '唯一值',
    },
  },
  required: [
    'createdTime',
    'updatedTime',
    'username',
    'roles',
    'email',
    'status',
    '_id',
  ],
} as const;

export const LoginSuccessResultDtoSchema = {
  type: 'object',
  properties: {
    access_token: {
      type: 'string',
      example: 'token123456',
    },
    userInfo: {
      example: {
        createdTime: '1743413281187',
        updatedTime: '1743413281187',
        username: 'admin',
        avatar: '',
        name: '',
        roles: [],
        sex: 'Male',
        phone: '',
        email: '',
        status: 'Open',
        _id: 'string',
      },
      allOf: [
        {
          $ref: '#/components/schemas/AdmintorsResultDto',
        },
      ],
    },
    menus: {
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
  required: ['access_token', 'userInfo', 'menus'],
} as const;

export const ErrorResultDtoSchema = {
  type: 'object',
  properties: {
    message: {
      type: 'string',
      description: '错误信息',
    },
    statusCode: {
      type: 'number',
      description: '错误码',
    },
  },
  required: ['message', 'statusCode'],
} as const;

export const AdmintorsCreateBodyDtoSchema = {
  type: 'object',
  properties: {
    username: {
      type: 'string',
      description: '管理人员名称',
      example: 'admin',
    },
    password: {
      type: 'string',
      description: '密码',
      example: '123456',
    },
    roles: {
      description: '角色',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
  required: ['username', 'password', 'roles'],
} as const;

export const DeleteIdsDtoSchema = {
  type: 'object',
  properties: {
    ids: {
      description: '删除Id列表',
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
  required: ['ids'],
} as const;

export const IntersectionUpdateResDtoDeleteResDtoSchema = {
  type: 'object',
  properties: {
    acknowledged: {
      type: 'boolean',
      description: '是否成功',
    },
    modifiedCount: {
      type: 'number',
      description: '更新数量',
    },
    upsertedId: {
      type: 'string',
      description: '更新插入id',
    },
    upsertedCount: {
      type: 'number',
      description: '更新插入数量',
    },
    matchedCount: {
      type: 'number',
      description: '符合更新条件的数量',
    },
    deletedCount: {
      type: 'number',
      description: '匹配数量',
    },
  },
  required: ['acknowledged'],
} as const;

export const AdmintorsUpdateDtoSchema = {
  type: 'object',
  properties: {
    username: {
      type: 'string',
      description: '管理人员名称',
      example: 'admin',
    },
    avatar: {
      type: 'string',
      description: '头像',
      example: '',
    },
    name: {
      type: 'string',
      description: '姓名',
      example: '',
    },
    roles: {
      description: '角色',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
    sex: {
      type: 'string',
      description: '性别',
      example: 'Male',
      enum: ['Male', 'Female'],
    },
    phone: {
      type: 'string',
      description: '电话号码',
      example: '',
    },
    email: {
      type: 'string',
      description: '邮箱',
      example: '',
    },
    status: {
      type: 'string',
      description: '状态',
      example: 'Open',
      enum: ['Open', 'Close'],
    },
  },
} as const;

export const UpdateResDtoSchema = {
  type: 'object',
  properties: {
    acknowledged: {
      type: 'boolean',
      description: '是否成功',
    },
    modifiedCount: {
      type: 'number',
      description: '更新数量',
    },
    upsertedId: {
      type: 'string',
      description: '更新插入id',
    },
    upsertedCount: {
      type: 'number',
      description: '更新插入数量',
    },
    matchedCount: {
      type: 'number',
      description: '符合更新条件的数量',
    },
  },
  required: ['acknowledged'],
} as const;

export const AdmintorsFilterDtoSchema = {
  type: 'object',
  properties: {
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    username: {
      type: 'string',
      description: '管理人员名称',
      example: 'admin',
    },
    avatar: {
      type: 'string',
      description: '头像',
      example: '',
    },
    name: {
      type: 'string',
      description: '姓名',
      example: '',
    },
    roles: {
      description: '角色',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
    sex: {
      type: 'string',
      description: '性别',
      example: 'Male',
      enum: ['Male', 'Female'],
    },
    phone: {
      type: 'string',
      description: '电话号码',
      example: '',
    },
    email: {
      type: 'string',
      description: '邮箱',
      example: '',
    },
    status: {
      type: 'string',
      description: '状态',
      example: 'Open',
      enum: ['Open', 'Close'],
    },
  },
} as const;

export const RolesResultDtoSchema = {
  type: 'object',
  properties: {
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    name: {
      type: 'string',
      description: '角色名称',
      example: 'role',
    },
    description: {
      type: 'string',
      description: '角色名称',
      example: '我是角色描述',
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    permissionAuthority: {
      type: 'array',
      description: '页面操作权限',
      items: {
        type: 'string',
        enum: ['Create', 'Delete', 'Update', 'Query'],
      },
    },
    menus: {
      description: '菜单',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
    _id: {
      type: 'string',
      description: '唯一值',
    },
  },
  required: [
    'createdTime',
    'updatedTime',
    'name',
    'permissionAuthority',
    'menus',
    '_id',
  ],
} as const;

export const AdmintorsPageItemDtoSchema = {
  type: 'object',
  properties: {
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    username: {
      type: 'string',
      description: '管理人员名称',
      example: 'admin',
    },
    avatar: {
      type: 'string',
      description: '头像',
      example: '',
    },
    name: {
      type: 'string',
      description: '姓名',
      example: '',
    },
    sex: {
      type: 'string',
      description: '性别',
      example: 'Male',
      enum: ['Male', 'Female'],
    },
    phone: {
      type: 'string',
      description: '电话号码',
      example: '',
    },
    email: {
      type: 'string',
      description: '邮箱',
      example: '',
    },
    status: {
      type: 'string',
      description: '状态',
      example: 'Open',
      enum: ['Open', 'Close'],
    },
    _id: {
      type: 'string',
      description: '唯一值',
    },
    roles: {
      description: '角色列表',
      type: 'array',
      items: {
        $ref: '#/components/schemas/RolesResultDto',
      },
    },
  },
  required: [
    'createdTime',
    'updatedTime',
    'username',
    'email',
    'status',
    '_id',
    'roles',
  ],
} as const;

export const AdmintorPaginationResultDtoSchema = {
  type: 'object',
  properties: {
    pageNo: {
      type: 'number',
      description: '当前页面',
      minimum: 1,
      example: 1,
    },
    pageSize: {
      type: 'number',
      description: '分页大小',
      minimum: 1,
      example: 10,
    },
    total: {
      type: 'number',
      description: '所有数量',
      example: 1,
    },
    list: {
      description: '所有数量',
      type: 'array',
      items: {
        $ref: '#/components/schemas/AdmintorsPageItemDto',
      },
    },
  },
  required: ['pageNo', 'pageSize', 'total', 'list'],
} as const;

export const RoleCreateBodyDtoSchema = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
      description: '角色名称',
      example: 'role',
    },
    description: {
      type: 'string',
      description: '角色名称',
      example: '我是角色描述',
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    permissionAuthority: {
      type: 'array',
      description: '页面操作权限',
      items: {
        type: 'string',
        enum: ['Create', 'Delete', 'Update', 'Query'],
      },
    },
    menus: {
      description: '菜单',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
  required: ['name', 'permissionAuthority', 'menus'],
} as const;

export const RolesUpdateDtoSchema = {
  type: 'object',
  properties: {
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    name: {
      type: 'string',
      description: '角色名称',
      example: 'role',
    },
    description: {
      type: 'string',
      description: '角色名称',
      example: '我是角色描述',
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    permissionAuthority: {
      type: 'array',
      description: '页面操作权限',
      items: {
        type: 'string',
        enum: ['Create', 'Delete', 'Update', 'Query'],
      },
    },
    menus: {
      description: '菜单',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
} as const;

export const RolesQueryFilterDtoSchema = {
  type: 'object',
  properties: {
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    name: {
      type: 'string',
      description: '角色名称',
      example: 'role',
    },
    description: {
      type: 'string',
      description: '角色名称',
      example: '我是角色描述',
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    permissionAuthority: {
      type: 'array',
      description: '页面操作权限',
      items: {
        type: 'string',
        enum: ['Create', 'Delete', 'Update', 'Query'],
      },
    },
    menus: {
      description: '菜单',
      example: [],
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
} as const;

export const RoleQueryPaginationResultDtoSchema = {
  type: 'object',
  properties: {
    pageNo: {
      type: 'number',
      description: '当前页面',
      minimum: 1,
      example: 1,
    },
    pageSize: {
      type: 'number',
      description: '分页大小',
      minimum: 1,
      example: 10,
    },
    total: {
      type: 'number',
      description: '所有数量',
      example: 1,
    },
    list: {
      description: '所有数量',
      type: 'array',
      items: {
        $ref: '#/components/schemas/RolesResultDto',
      },
    },
  },
  required: ['pageNo', 'pageSize', 'total', 'list'],
} as const;

export const MenusCreateBodyDtoSchema = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
      description: '菜单名称',
      example: 'menuName',
    },
    uniqueKey: {
      type: 'string',
      description: '菜单唯一键',
      example: 'uniqueKey',
    },
    description: {
      type: 'string',
      description: '菜单名称',
      example: '我是菜单描述',
    },
    path: {
      type: 'string',
      description: '菜单路径',
      example: '',
    },
    sort: {
      type: 'number',
      description: '用作菜单排序',
      example: 0,
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    parent: {
      type: 'string',
      description: '图标',
      example: '',
    },
  },
  required: ['name', 'uniqueKey', 'path', 'sort'],
} as const;

export const MenusResultDtoSchema = {
  type: 'object',
  properties: {
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    name: {
      type: 'string',
      description: '菜单名称',
      example: 'menuName',
    },
    uniqueKey: {
      type: 'string',
      description: '菜单唯一键',
      example: 'uniqueKey',
    },
    description: {
      type: 'string',
      description: '菜单名称',
      example: '我是菜单描述',
    },
    path: {
      type: 'string',
      description: '菜单路径',
      example: '',
    },
    sort: {
      type: 'number',
      description: '用作菜单排序',
      example: 0,
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    parent: {
      type: 'string',
      description: '图标',
      example: '',
    },
    _id: {
      type: 'string',
      description: '唯一值',
    },
  },
  required: [
    'createdTime',
    'updatedTime',
    'name',
    'uniqueKey',
    'path',
    'sort',
    '_id',
  ],
} as const;

export const MenusUpdateDtoSchema = {
  type: 'object',
  properties: {
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    name: {
      type: 'string',
      description: '菜单名称',
      example: 'menuName',
    },
    uniqueKey: {
      type: 'string',
      description: '菜单唯一键',
      example: 'uniqueKey',
    },
    description: {
      type: 'string',
      description: '菜单名称',
      example: '我是菜单描述',
    },
    path: {
      type: 'string',
      description: '菜单路径',
      example: '',
    },
    sort: {
      type: 'number',
      description: '用作菜单排序',
      example: 0,
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    parent: {
      type: 'string',
      description: '图标',
      example: '',
    },
  },
} as const;

export const TreeMenuDataDtoSchema = {
  type: 'object',
  properties: {
    deletedTime: {
      format: 'date-time',
      type: 'string',
      description: '删除时间',
      default: '',
    },
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    name: {
      type: 'string',
      description: '菜单名称',
      example: 'menuName',
    },
    uniqueKey: {
      type: 'string',
      description: '菜单唯一键',
      example: 'uniqueKey',
    },
    description: {
      type: 'string',
      description: '菜单名称',
      example: '我是菜单描述',
    },
    path: {
      type: 'string',
      description: '菜单路径',
      example: '',
    },
    sort: {
      type: 'number',
      description: '用作菜单排序',
      example: 0,
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    parent: {
      type: 'string',
      description: '图标',
      example: '',
    },
    _id: {
      type: 'string',
      description: '唯一值',
    },
    children: {
      description: '唯一值',
      examples: [],
      type: 'array',
      items: {
        $ref: '#/components/schemas/TreeMenuDataDto',
      },
    },
  },
  required: [
    'createdTime',
    'updatedTime',
    'name',
    'uniqueKey',
    'path',
    'sort',
    '_id',
    'children',
  ],
} as const;

export const MenusQueryDtoSchema = {
  type: 'object',
  properties: {
    createdTime: {
      format: 'date-time',
      type: 'string',
      description: '创建日期',
      default: 1743906058074,
    },
    updatedTime: {
      format: 'date-time',
      type: 'string',
      description: '更新日期',
      default: 1743906058074,
    },
    name: {
      type: 'string',
      description: '菜单名称',
      example: 'menuName',
    },
    uniqueKey: {
      type: 'string',
      description: '菜单唯一键',
      example: 'uniqueKey',
    },
    description: {
      type: 'string',
      description: '菜单名称',
      example: '我是菜单描述',
    },
    path: {
      type: 'string',
      description: '菜单路径',
      example: '',
    },
    sort: {
      type: 'number',
      description: '用作菜单排序',
      example: 0,
    },
    icon: {
      type: 'string',
      description: '图标',
      example: '',
    },
    parent: {
      type: 'string',
      description: '图标',
      example: '',
    },
  },
} as const;

export const FileUploadDtoSchema = {
  type: 'object',
  properties: {
    file: {
      type: 'string',
      format: 'binary',
    },
  },
  required: ['file'],
} as const;

export const FileUploadSuccessResultDtoSchema = {
  type: 'object',
  properties: {
    url: {
      type: 'string',
      description: '图片地址',
    },
  },
  required: ['url'],
} as const;

export const FilesUploadDtoSchema = {
  type: 'object',
  properties: {
    files: {
      type: 'array',
      items: {
        type: 'string',
        format: 'binary',
      },
    },
  },
  required: ['files'],
} as const;

export const QueryDirsFilterDtoSchema = {
  type: 'object',
  properties: {
    dirPath: {
      type: 'string',
      description: '路径',
    },
  },
} as const;

export const QueryDirsPaginationResultDtoSchema = {
  type: 'object',
  properties: {
    pageNo: {
      type: 'number',
      description: '当前页面',
      minimum: 1,
      example: 1,
    },
    pageSize: {
      type: 'number',
      description: '分页大小',
      minimum: 1,
      example: 10,
    },
    total: {
      type: 'number',
      description: '所有数量',
      example: 1,
    },
    list: {
      description: '列表',
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
  required: ['list'],
} as const;
