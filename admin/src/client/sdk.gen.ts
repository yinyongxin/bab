// This file is auto-generated by @hey-api/openapi-ts

import {
  type Options as ClientOptions,
  type TDataShape,
  type Client,
  formDataBodySerializer,
} from '@hey-api/client-axios';
import type {
  AuthControllerSignInData,
  AuthControllerSignInResponse,
  AuthControllerGetProfileData,
  AdmintorsControllerAddOneData,
  AdmintorsControllerAddOneResponse,
  AdmintorsControllerDeleteByIdsData,
  AdmintorsControllerDeleteByIdsResponse,
  AdmintorsControllerUpdateOneData,
  AdmintorsControllerUpdateOneResponse,
  AdmintorsControllerFindByIdData,
  AdmintorsControllerFindByIdResponse,
  AdmintorsControllerGetPageListData,
  AdmintorsControllerGetPageListResponse,
  RolesControllerAddOneData,
  RolesControllerAddOneResponse,
  RolesControllerDeleteByIdsData,
  RolesControllerDeleteByIdsResponse,
  RolesControllerUpdateOneData,
  RolesControllerUpdateOneResponse,
  RolesControllerFindByIdData,
  RolesControllerFindByIdResponse,
  RolesControllerGetPageListData,
  RolesControllerGetPageListResponse,
  MenusControllerAddOneData,
  MenusControllerAddOneResponse,
  MenusControllerDeleteByIdsData,
  MenusControllerDeleteByIdsResponse,
  MenusControllerUpdateOneData,
  MenusControllerUpdateOneResponse,
  MenusControllerFindByIdData,
  MenusControllerFindByIdResponse,
  MenusControllerGetTreeDataData,
  MenusControllerGetTreeDataResponse,
  MenusControllerGetAllMenusData,
  MenusControllerGetAllMenusResponse,
  FilesControllerUploadFileData,
  FilesControllerUploadFilesData,
} from './types.gen';
import {
  authControllerSignInResponseTransformer,
  admintorsControllerAddOneResponseTransformer,
  admintorsControllerFindByIdResponseTransformer,
  admintorsControllerGetPageListResponseTransformer,
  rolesControllerAddOneResponseTransformer,
  rolesControllerFindByIdResponseTransformer,
  rolesControllerGetPageListResponseTransformer,
  menusControllerAddOneResponseTransformer,
  menusControllerFindByIdResponseTransformer,
  menusControllerGetTreeDataResponseTransformer,
  menusControllerGetAllMenusResponseTransformer,
} from './transformers.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * 登录
 * 登录
 */
export const authControllerSignIn = <ThrowOnError extends boolean = false>(
  options: Options<AuthControllerSignInData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    AuthControllerSignInResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: authControllerSignInResponseTransformer,
    url: '/api/auth/login',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

export const authControllerGetProfile = <ThrowOnError extends boolean = false>(
  options?: Options<AuthControllerGetProfileData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>(
    {
      security: [
        {
          name: 'Authorization',
          type: 'apiKey',
        },
      ],
      url: '/api/auth/profile',
      ...options,
    },
  );
};

/**
 * 添加一个管理人员
 * 添加一个管理人员
 */
export const admintorsControllerAddOne = <ThrowOnError extends boolean = false>(
  options: Options<AdmintorsControllerAddOneData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    AdmintorsControllerAddOneResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: admintorsControllerAddOneResponseTransformer,
    url: '/api/admintors/addOne',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 通过Id删除管理人员
 * 通过Ids删除管理人员
 */
export const admintorsControllerDeleteByIds = <
  ThrowOnError extends boolean = false,
>(
  options: Options<AdmintorsControllerDeleteByIdsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    AdmintorsControllerDeleteByIdsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/admintors/deleteByIds',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 更新单条数据
 * 更新单条数据
 */
export const admintorsControllerUpdateOne = <
  ThrowOnError extends boolean = false,
>(
  options: Options<AdmintorsControllerUpdateOneData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).patch<
    AdmintorsControllerUpdateOneResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/admintors/updateOne',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 通过Id查找管理人员
 * 通过Id查找管理人员
 */
export const admintorsControllerFindById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<AdmintorsControllerFindByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    AdmintorsControllerFindByIdResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: admintorsControllerFindByIdResponseTransformer,
    url: '/api/admintors/findById',
    ...options,
  });
};

/**
 * 获取分页列表
 * 获取分页列表
 */
export const admintorsControllerGetPageList = <
  ThrowOnError extends boolean = false,
>(
  options: Options<AdmintorsControllerGetPageListData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    AdmintorsControllerGetPageListResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: admintorsControllerGetPageListResponseTransformer,
    url: '/api/admintors/getPageList',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 添加一个角色
 * 添加一个角色
 */
export const rolesControllerAddOne = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerAddOneData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    RolesControllerAddOneResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: rolesControllerAddOneResponseTransformer,
    url: '/api/roles/addOne',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 通过Id删除角色
 * 通过Ids删除角色
 */
export const rolesControllerDeleteByIds = <
  ThrowOnError extends boolean = false,
>(
  options: Options<RolesControllerDeleteByIdsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    RolesControllerDeleteByIdsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/roles/deleteByIds',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 更新单条数据
 * 更新单条数据
 */
export const rolesControllerUpdateOne = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerUpdateOneData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).patch<
    RolesControllerUpdateOneResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/roles/updateOne',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 通过Id查找角色
 * 通过Id查找角色
 */
export const rolesControllerFindById = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerFindByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    RolesControllerFindByIdResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: rolesControllerFindByIdResponseTransformer,
    url: '/api/roles/findById',
    ...options,
  });
};

/**
 * 获取分页列表
 * 获取分页列表
 */
export const rolesControllerGetPageList = <
  ThrowOnError extends boolean = false,
>(
  options: Options<RolesControllerGetPageListData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    RolesControllerGetPageListResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: rolesControllerGetPageListResponseTransformer,
    url: '/api/roles/getPageList',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 添加一个菜单
 * 添加一个菜单
 */
export const menusControllerAddOne = <ThrowOnError extends boolean = false>(
  options: Options<MenusControllerAddOneData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    MenusControllerAddOneResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: menusControllerAddOneResponseTransformer,
    url: '/api/menus/addOne',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 通过Id删除菜单
 * 通过Ids删除菜单
 */
export const menusControllerDeleteByIds = <
  ThrowOnError extends boolean = false,
>(
  options: Options<MenusControllerDeleteByIdsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    MenusControllerDeleteByIdsResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/menus/deleteByIds',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 更新单条数据
 * 更新单条数据
 */
export const menusControllerUpdateOne = <ThrowOnError extends boolean = false>(
  options: Options<MenusControllerUpdateOneData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).patch<
    MenusControllerUpdateOneResponse,
    unknown,
    ThrowOnError
  >({
    url: '/api/menus/updateOne',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * 通过Id查找菜单
 * 通过Id查找菜单
 */
export const menusControllerFindById = <ThrowOnError extends boolean = false>(
  options: Options<MenusControllerFindByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    MenusControllerFindByIdResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: menusControllerFindByIdResponseTransformer,
    url: '/api/menus/findById',
    ...options,
  });
};

/**
 * 获取树形结构
 * 获取树形结构
 */
export const menusControllerGetTreeData = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<MenusControllerGetTreeDataData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    MenusControllerGetTreeDataResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: menusControllerGetTreeDataResponseTransformer,
    url: '/api/menus/getTreeData',
    ...options,
  });
};

/**
 * 获取所有菜单
 * 获取所有菜单
 */
export const menusControllerGetAllMenus = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<MenusControllerGetAllMenusData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    MenusControllerGetAllMenusResponse,
    unknown,
    ThrowOnError
  >({
    responseTransformer: menusControllerGetAllMenusResponseTransformer,
    url: '/api/menus/getAll',
    ...options,
  });
};

export const filesControllerUploadFile = <ThrowOnError extends boolean = false>(
  options: Options<FilesControllerUploadFileData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>(
    {
      ...formDataBodySerializer,
      url: '/api/files/uploadFile',
      ...options,
      headers: {
        'Content-Type': null,
        ...options?.headers,
      },
    },
  );
};

export const filesControllerUploadFiles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<FilesControllerUploadFilesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>(
    {
      ...formDataBodySerializer,
      url: '/api/files/uploadFiles',
      ...options,
      headers: {
        'Content-Type': null,
        ...options?.headers,
      },
    },
  );
};
