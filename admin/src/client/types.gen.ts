// This file is auto-generated by @hey-api/openapi-ts

export type SignInDto = {
    /**
     * 管理人员名称
     */
    username: string;
    /**
     * 密码
     */
    password: string;
};

export type ResultAdmintorDto = {
    /**
     * 创建日期
     */
    createdTime: Date;
    /**
     * 更新日期
     */
    updatedTime: Date;
    /**
     * 管理人员名称
     */
    username: string;
    /**
     * 头像
     */
    avatar?: string;
    /**
     * 姓名
     */
    name?: string;
    /**
     * 性别
     */
    sex?: 'Male' | 'Female';
    /**
     * 电话号码
     */
    phone?: string;
    /**
     * 邮箱
     */
    email?: string;
    /**
     * 状态
     */
    status: 'Open' | 'Close';
    /**
     * 唯一值
     */
    _id: string;
};

export type CreateAdmintorBodyDto = {
    /**
     * 管理人员名称
     */
    username: string;
    /**
     * 密码
     */
    password: string;
};

export type DeleteIdsDto = {
    /**
     * 删除Id列表
     */
    ids: Array<string>;
};

export type IntersectionUpdateResDtoDeleteResDto = {
    /**
     * 是否成功
     */
    acknowledged: boolean;
    /**
     * 更新数量
     */
    modifiedCount?: number;
    /**
     * 更新插入id
     */
    upsertedId?: string;
    /**
     * 更新插入数量
     */
    upsertedCount?: number;
    /**
     * 符合更新条件的数量
     */
    matchedCount?: number;
    /**
     * 匹配数量
     */
    deletedCount?: number;
};

export type UpdateAdmintorDto = {
    /**
     * 更新日期
     */
    updatedTime?: Date;
    /**
     * 管理人员名称
     */
    username?: string;
    /**
     * 头像
     */
    avatar?: string;
    /**
     * 姓名
     */
    name?: string;
    /**
     * 性别
     */
    sex?: 'Male' | 'Female';
    /**
     * 电话号码
     */
    phone?: string;
    /**
     * 邮箱
     */
    email?: string;
    /**
     * 状态
     */
    status?: 'Open' | 'Close';
};

export type UpdateResDto = {
    /**
     * 是否成功
     */
    acknowledged: boolean;
    /**
     * 更新数量
     */
    modifiedCount?: number;
    /**
     * 更新插入id
     */
    upsertedId?: string;
    /**
     * 更新插入数量
     */
    upsertedCount?: number;
    /**
     * 符合更新条件的数量
     */
    matchedCount?: number;
};

export type QueryAdmintorDto = {
    /**
     * 创建日期
     */
    createdTime?: Date;
    /**
     * 更新日期
     */
    updatedTime?: Date;
    /**
     * 管理人员名称
     */
    username?: string;
    /**
     * 头像
     */
    avatar?: string;
    /**
     * 姓名
     */
    name?: string;
    /**
     * 性别
     */
    sex?: 'Male' | 'Female';
    /**
     * 电话号码
     */
    phone?: string;
    /**
     * 邮箱
     */
    email?: string;
    /**
     * 状态
     */
    status?: 'Open' | 'Close';
};

export type AdmintorPaginationQueryResultDto = {
    /**
     * 当前页面
     */
    pageNo: number;
    /**
     * 分页大小
     */
    pageSize: number;
    /**
     * 所有数量
     */
    total: number;
    /**
     * 所有数量
     */
    list: Array<ResultAdmintorDto>;
};

export type CreateRoleBodyDto = {
    /**
     * 角色名称
     */
    name: string;
    /**
     * 角色名称
     */
    description?: string;
    /**
     * 图标
     */
    icon?: string;
};

export type ResultRoleDto = {
    /**
     * 创建日期
     */
    createdTime: Date;
    /**
     * 更新日期
     */
    updatedTime: Date;
    /**
     * 角色名称
     */
    name: string;
    /**
     * 角色名称
     */
    description?: string;
    /**
     * 图标
     */
    icon?: string;
    /**
     * 唯一值
     */
    _id: string;
};

export type UpdateRoleDto = {
    /**
     * 更新日期
     */
    updatedTime?: Date;
    /**
     * 角色名称
     */
    name?: string;
    /**
     * 角色名称
     */
    description?: string;
    /**
     * 图标
     */
    icon?: string;
};

export type QueryRoleDto = {
    /**
     * 创建日期
     */
    createdTime?: Date;
    /**
     * 更新日期
     */
    updatedTime?: Date;
    /**
     * 角色名称
     */
    name?: string;
    /**
     * 角色名称
     */
    description?: string;
    /**
     * 图标
     */
    icon?: string;
};

export type RolePaginationQueryResultDto = {
    /**
     * 当前页面
     */
    pageNo: number;
    /**
     * 分页大小
     */
    pageSize: number;
    /**
     * 所有数量
     */
    total: number;
    /**
     * 所有数量
     */
    list: Array<ResultRoleDto>;
};

export type CreateMenuBodyDto = {
    /**
     * 菜单名称
     */
    name: string;
    /**
     * 菜单名称
     */
    description?: string;
    /**
     * 菜单路径
     */
    path: string;
    /**
     * 用作菜单排序
     */
    sort: number;
    /**
     * 页面权限
     */
    pageAuthority?: 'Open' | 'Delete' | 'Update' | 'Query';
    /**
     * 图标
     */
    icon?: string;
    /**
     * 图标
     */
    parent?: string;
};

export type ResultMenuDto = {
    /**
     * 创建日期
     */
    createdTime: Date;
    /**
     * 更新日期
     */
    updatedTime: Date;
    /**
     * 菜单名称
     */
    name: string;
    /**
     * 菜单名称
     */
    description?: string;
    /**
     * 菜单路径
     */
    path: string;
    /**
     * 用作菜单排序
     */
    sort: number;
    /**
     * 页面权限
     */
    pageAuthority?: 'Open' | 'Delete' | 'Update' | 'Query';
    /**
     * 图标
     */
    icon?: string;
    /**
     * 图标
     */
    parent?: string;
    /**
     * 唯一值
     */
    _id: string;
};

export type UpdateMenuDto = {
    /**
     * 更新日期
     */
    updatedTime?: Date;
    /**
     * 菜单名称
     */
    name?: string;
    /**
     * 菜单名称
     */
    description?: string;
    /**
     * 菜单路径
     */
    path?: string;
    /**
     * 用作菜单排序
     */
    sort?: number;
    /**
     * 页面权限
     */
    pageAuthority?: 'Open' | 'Delete' | 'Update' | 'Query';
    /**
     * 图标
     */
    icon?: string;
    /**
     * 图标
     */
    parent?: string;
};

export type TreeMenuDataDto = {
    /**
     * 删除时间
     */
    deletedTime?: Date;
    /**
     * 创建日期
     */
    createdTime: Date;
    /**
     * 更新日期
     */
    updatedTime: Date;
    /**
     * 菜单名称
     */
    name: string;
    /**
     * 菜单名称
     */
    description?: string;
    /**
     * 菜单路径
     */
    path: string;
    /**
     * 用作菜单排序
     */
    sort: number;
    /**
     * 页面权限
     */
    pageAuthority?: 'Open' | 'Delete' | 'Update' | 'Query';
    /**
     * 图标
     */
    icon?: string;
    /**
     * 图标
     */
    parent?: string;
    /**
     * 唯一值
     */
    _id: string;
    /**
     * 唯一值
     */
    children: Array<TreeMenuDataDto>;
};

export type AuthControllerSignInData = {
    body: SignInDto;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type AuthControllerSignInResponses = {
    /**
     * Token和管理人员信息
     */
    200: ResultAdmintorDto;
};

export type AuthControllerSignInResponse = AuthControllerSignInResponses[keyof AuthControllerSignInResponses];

export type AuthControllerGetProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/profile';
};

export type AuthControllerGetProfileResponses = {
    200: unknown;
};

export type AdmintorsControllerAddOneData = {
    body: CreateAdmintorBodyDto;
    path?: never;
    query?: never;
    url: '/admintors/addOne';
};

export type AdmintorsControllerAddOneResponses = {
    /**
     * 添加管理人员成功
     */
    200: ResultAdmintorDto;
};

export type AdmintorsControllerAddOneResponse = AdmintorsControllerAddOneResponses[keyof AdmintorsControllerAddOneResponses];

export type AdmintorsControllerDeleteByIdsData = {
    body: DeleteIdsDto;
    path?: never;
    query?: never;
    url: '/admintors/deleteByIds';
};

export type AdmintorsControllerDeleteByIdsResponses = {
    /**
     * 删除成功
     */
    default: IntersectionUpdateResDtoDeleteResDto;
};

export type AdmintorsControllerDeleteByIdsResponse = AdmintorsControllerDeleteByIdsResponses[keyof AdmintorsControllerDeleteByIdsResponses];

export type AdmintorsControllerUpdateOneData = {
    body: UpdateAdmintorDto;
    path?: never;
    query: {
        /**
         * 唯一值
         */
        id: string;
    };
    url: '/admintors/updateOne';
};

export type AdmintorsControllerUpdateOneResponses = {
    /**
     * 更新结果
     */
    default: UpdateResDto;
};

export type AdmintorsControllerUpdateOneResponse = AdmintorsControllerUpdateOneResponses[keyof AdmintorsControllerUpdateOneResponses];

export type AdmintorsControllerFindByIdData = {
    body?: never;
    path?: never;
    query: {
        /**
         * 唯一值
         */
        id: string;
    };
    url: '/admintors/findById';
};

export type AdmintorsControllerFindByIdResponses = {
    /**
     * 查找成功
     */
    200: ResultAdmintorDto;
};

export type AdmintorsControllerFindByIdResponse = AdmintorsControllerFindByIdResponses[keyof AdmintorsControllerFindByIdResponses];

export type AdmintorsControllerFindAllByFieldsData = {
    body: QueryAdmintorDto;
    path?: never;
    query?: never;
    url: '/admintors/findAllByFields';
};

export type AdmintorsControllerFindAllByFieldsResponses = {
    /**
     * 查询成功
     */
    200: Array<ResultAdmintorDto>;
};

export type AdmintorsControllerFindAllByFieldsResponse = AdmintorsControllerFindAllByFieldsResponses[keyof AdmintorsControllerFindAllByFieldsResponses];

export type AdmintorsControllerGetPageListData = {
    body: QueryAdmintorDto;
    path?: never;
    query: {
        /**
         * 当前页面
         */
        pageNo: number;
        /**
         * 分页大小
         */
        pageSize: number;
    };
    url: '/admintors/getPageList';
};

export type AdmintorsControllerGetPageListResponses = {
    /**
     * 获取分页列表
     */
    default: AdmintorPaginationQueryResultDto;
};

export type AdmintorsControllerGetPageListResponse = AdmintorsControllerGetPageListResponses[keyof AdmintorsControllerGetPageListResponses];

export type RolesControllerAddOneData = {
    body: CreateRoleBodyDto;
    path?: never;
    query?: never;
    url: '/roles/addOne';
};

export type RolesControllerAddOneResponses = {
    /**
     * 添加角色成功
     */
    200: ResultRoleDto;
};

export type RolesControllerAddOneResponse = RolesControllerAddOneResponses[keyof RolesControllerAddOneResponses];

export type RolesControllerDeleteByIdsData = {
    body: DeleteIdsDto;
    path?: never;
    query?: never;
    url: '/roles/deleteByIds';
};

export type RolesControllerDeleteByIdsResponses = {
    /**
     * 删除成功
     */
    default: IntersectionUpdateResDtoDeleteResDto;
};

export type RolesControllerDeleteByIdsResponse = RolesControllerDeleteByIdsResponses[keyof RolesControllerDeleteByIdsResponses];

export type RolesControllerUpdateOneData = {
    body: UpdateRoleDto;
    path?: never;
    query: {
        /**
         * 唯一值
         */
        id: string;
    };
    url: '/roles/updateOne';
};

export type RolesControllerUpdateOneResponses = {
    /**
     * 更新结果
     */
    default: UpdateResDto;
};

export type RolesControllerUpdateOneResponse = RolesControllerUpdateOneResponses[keyof RolesControllerUpdateOneResponses];

export type RolesControllerFindByIdData = {
    body?: never;
    path?: never;
    query: {
        /**
         * 唯一值
         */
        id: string;
    };
    url: '/roles/findById';
};

export type RolesControllerFindByIdResponses = {
    /**
     * 查找成功
     */
    200: ResultRoleDto;
};

export type RolesControllerFindByIdResponse = RolesControllerFindByIdResponses[keyof RolesControllerFindByIdResponses];

export type RolesControllerFindAllByFieldsData = {
    body: QueryRoleDto;
    path?: never;
    query?: never;
    url: '/roles/findAllByFields';
};

export type RolesControllerFindAllByFieldsResponses = {
    /**
     * 查询成功
     */
    200: Array<ResultRoleDto>;
};

export type RolesControllerFindAllByFieldsResponse = RolesControllerFindAllByFieldsResponses[keyof RolesControllerFindAllByFieldsResponses];

export type RolesControllerGetPageListData = {
    body: QueryRoleDto;
    path?: never;
    query: {
        /**
         * 当前页面
         */
        pageNo: number;
        /**
         * 分页大小
         */
        pageSize: number;
    };
    url: '/roles/getPageList';
};

export type RolesControllerGetPageListResponses = {
    /**
     * 获取分页列表
     */
    default: RolePaginationQueryResultDto;
};

export type RolesControllerGetPageListResponse = RolesControllerGetPageListResponses[keyof RolesControllerGetPageListResponses];

export type MenusControllerAddOneData = {
    body: CreateMenuBodyDto;
    path?: never;
    query?: never;
    url: '/menus/addOne';
};

export type MenusControllerAddOneResponses = {
    /**
     * 添加菜单成功
     */
    200: ResultMenuDto;
};

export type MenusControllerAddOneResponse = MenusControllerAddOneResponses[keyof MenusControllerAddOneResponses];

export type MenusControllerDeleteByIdsData = {
    body: DeleteIdsDto;
    path?: never;
    query?: never;
    url: '/menus/deleteByIds';
};

export type MenusControllerDeleteByIdsResponses = {
    /**
     * 删除成功
     */
    default: IntersectionUpdateResDtoDeleteResDto;
};

export type MenusControllerDeleteByIdsResponse = MenusControllerDeleteByIdsResponses[keyof MenusControllerDeleteByIdsResponses];

export type MenusControllerUpdateOneData = {
    body: UpdateMenuDto;
    path?: never;
    query: {
        /**
         * 唯一值
         */
        id: string;
    };
    url: '/menus/updateOne';
};

export type MenusControllerUpdateOneResponses = {
    /**
     * 更新结果
     */
    default: UpdateResDto;
};

export type MenusControllerUpdateOneResponse = MenusControllerUpdateOneResponses[keyof MenusControllerUpdateOneResponses];

export type MenusControllerFindByIdData = {
    body?: never;
    path?: never;
    query: {
        /**
         * 唯一值
         */
        id: string;
    };
    url: '/menus/findById';
};

export type MenusControllerFindByIdResponses = {
    /**
     * 查找成功
     */
    200: ResultMenuDto;
};

export type MenusControllerFindByIdResponse = MenusControllerFindByIdResponses[keyof MenusControllerFindByIdResponses];

export type MenusControllerGetTreeDataData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/menus/getTreeData';
};

export type MenusControllerGetTreeDataResponses = {
    /**
     * 获取树形结构
     */
    200: Array<TreeMenuDataDto>;
};

export type MenusControllerGetTreeDataResponse = MenusControllerGetTreeDataResponses[keyof MenusControllerGetTreeDataResponses];

export type MenusControllerGetAllMenusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/menus/getAll';
};

export type MenusControllerGetAllMenusResponses = {
    /**
     * 获取所有菜单
     */
    200: Array<TreeMenuDataDto>;
};

export type MenusControllerGetAllMenusResponse = MenusControllerGetAllMenusResponses[keyof MenusControllerGetAllMenusResponses];

export type ClientOptions = {
    baseURL: string;
};