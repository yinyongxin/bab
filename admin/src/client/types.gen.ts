// This file is auto-generated by @hey-api/openapi-ts

export type SignInDto = {
  /**
   * 管理人员名称
   */
  username?: string;
  /**
   * 密码
   */
  password: string;
  /**
   * 邮箱
   */
  email?: string;
};

/**
 * 性别
 */
export type SexEnum = 'male' | 'female';

/**
 * 性别
 */
export const SexEnum = {
  MALE: 'male',
  FEMALE: 'female',
} as const;

/**
 * 状态
 */
export type StatusEnum = 'open' | 'close';

/**
 * 状态
 */
export const StatusEnum = {
  OPEN: 'open',
  CLOSE: 'close',
} as const;

export type AdmintorsResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 管理人员名称
   */
  username: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 角色
   */
  roles: Array<string>;
  /**
   * 性别
   */
  sex?: SexEnum;
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 邮箱
   */
  email: string;
  /**
   * 状态
   */
  status: StatusEnum;
  /**
   * 唯一值
   */
  _id: string;
};

export type LoginSuccessResultDto = {
  access_token: string;
  userInfo: AdmintorsResultDto;
  menus: Array<string>;
};

export type ErrorResultDto = {
  /**
   * 错误信息
   */
  message: string;
  /**
   * 错误码
   */
  statusCode: number;
};

export type AdmintorsCreateBodyDto = {
  /**
   * 管理人员名称
   */
  username: string;
  /**
   * 密码
   */
  password: string;
  /**
   * 角色
   */
  roles: Array<string>;
};

export type DeleteIdsDto = {
  /**
   * 删除Id列表
   */
  ids: Array<string>;
};

export type IntersectionUpdateResDtoDeleteResDto = {
  /**
   * 是否成功
   */
  acknowledged: boolean;
  /**
   * 更新数量
   */
  modifiedCount?: number;
  /**
   * 更新插入id
   */
  upsertedId?: string;
  /**
   * 更新插入数量
   */
  upsertedCount?: number;
  /**
   * 符合更新条件的数量
   */
  matchedCount?: number;
  /**
   * 匹配数量
   */
  deletedCount?: number;
};

export type AdmintorsUpdateDto = {
  /**
   * 管理人员名称
   */
  username?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 角色
   */
  roles?: Array<string>;
  /**
   * 性别
   */
  sex?: SexEnum;
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 邮箱
   */
  email?: string;
  /**
   * 状态
   */
  status?: StatusEnum;
};

export type UpdateResDto = {
  /**
   * 是否成功
   */
  acknowledged: boolean;
  /**
   * 更新数量
   */
  modifiedCount?: number;
  /**
   * 更新插入id
   */
  upsertedId?: string;
  /**
   * 更新插入数量
   */
  upsertedCount?: number;
  /**
   * 符合更新条件的数量
   */
  matchedCount?: number;
};

export type DateTimeRangeDto = {
  /**
   * 创建时间范围
   */
  readonly createdTime?: Array<Date>;
  /**
   * 更新时间范围
   */
  readonly updatedTime?: Array<Date>;
};

export type AdmintorsFilterFuzzyFieldsDto = {
  /**
   * 管理人员名称
   */
  username?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 邮箱
   */
  email?: string;
};

export type AdmintorsFilterDto = {
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 角色
   */
  roles?: Array<string>;
  /**
   * 性别
   */
  sex?: SexEnum;
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 状态
   */
  status?: StatusEnum;
  /**
   * 时间范围
   */
  dateTimeRange?: DateTimeRangeDto;
  /**
   * 模糊查询字段
   */
  fuzzyFields?: AdmintorsFilterFuzzyFieldsDto;
};

export type RolesResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 角色名称
   */
  name: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 菜单
   */
  menus: Array<string>;
  /**
   * 唯一值
   */
  _id: string;
};

export type AdmintorsPageItemDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 管理人员名称
   */
  username: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 性别
   */
  sex?: SexEnum;
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 邮箱
   */
  email: string;
  /**
   * 状态
   */
  status: StatusEnum;
  /**
   * 唯一值
   */
  _id: string;
  /**
   * 角色列表
   */
  roles: Array<RolesResultDto>;
};

export type AdmintorPaginationResultDto = {
  /**
   * 当前页面
   */
  pageNo: number;
  /**
   * 分页大小
   */
  pageSize: number;
  /**
   * 所有数量
   */
  total: number;
  /**
   * 所有数量
   */
  list: Array<AdmintorsPageItemDto>;
};

export type RoleCreateBodyDto = {
  /**
   * 角色名称
   */
  name: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 菜单
   */
  menus: Array<string>;
};

export type RolesUpdateDto = {
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 角色名称
   */
  name?: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 菜单
   */
  menus?: Array<string>;
};

export type RolesQueryFilterDto = {
  /**
   * 创建日期
   */
  createdTime?: Date;
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 角色名称
   */
  name?: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 菜单
   */
  menus?: Array<string>;
};

export type RoleQueryPaginationResultDto = {
  /**
   * 当前页面
   */
  pageNo: number;
  /**
   * 分页大小
   */
  pageSize: number;
  /**
   * 所有数量
   */
  total: number;
  /**
   * 所有数量
   */
  list: Array<RolesResultDto>;
};

/**
 * 菜单类型
 */
export type MenuTypeEnum = 'Directory' | 'Page' | 'FunctionArea';

/**
 * 菜单类型
 */
export const MenuTypeEnum = {
  DIRECTORY: 'Directory',
  PAGE: 'Page',
  FUNCTION_AREA: 'FunctionArea',
} as const;

export type MenusCreateBodyDto = {
  /**
   * 菜单名称
   */
  name: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径&功能区域标识
   */
  path: string;
  /**
   * 用作菜单排序
   */
  sort: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 菜单类型
   */
  menuType: MenuTypeEnum;
  /**
   * 是否隐藏
   */
  isHide: boolean;
};

export type MenusResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 菜单名称
   */
  name: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径&功能区域标识
   */
  path: string;
  /**
   * 用作菜单排序
   */
  sort: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 菜单类型
   */
  menuType: MenuTypeEnum;
  /**
   * 是否隐藏
   */
  isHide: boolean;
  /**
   * 唯一值
   */
  _id: string;
};

export type MenusUpdateDto = {
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 菜单名称
   */
  name?: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径&功能区域标识
   */
  path?: string;
  /**
   * 用作菜单排序
   */
  sort?: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 菜单类型
   */
  menuType?: MenuTypeEnum;
  /**
   * 是否隐藏
   */
  isHide?: boolean;
};

export type TreeMenuDataDto = {
  /**
   * 删除时间
   */
  deletedTime?: Date;
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 菜单名称
   */
  name: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径&功能区域标识
   */
  path: string;
  /**
   * 用作菜单排序
   */
  sort: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 菜单类型
   */
  menuType: MenuTypeEnum;
  /**
   * 是否隐藏
   */
  isHide: boolean;
  /**
   * 唯一值
   */
  _id: string;
  /**
   * 唯一值
   */
  children: Array<TreeMenuDataDto>;
};

export type MenusQueryDto = {
  /**
   * 创建日期
   */
  createdTime?: Date;
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 菜单名称
   */
  name?: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径&功能区域标识
   */
  path?: string;
  /**
   * 用作菜单排序
   */
  sort?: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 菜单类型
   */
  menuType?: MenuTypeEnum;
  /**
   * 是否隐藏
   */
  isHide?: boolean;
};

export type FileUploadDto = {
  file: Blob | File;
};

export type FileUploadSuccessResultDto = {
  /**
   * 图片地址
   */
  url: string;
};

export type FilesUploadDto = {
  files: Array<Blob | File>;
};

export type PickTypeClass = {
  /**
   * 原始文件名
   */
  originalname: string;
  /**
   * 唯一文件名
   */
  uniquedName: string;
};

export type FilesQueryFilterDto = {
  /**
   * 文件类型
   */
  mimetype?: string;
  /**
   * 文件大小
   */
  size?: number;
  /**
   * 文件路径
   */
  path?: string;
  /**
   * 时间范围
   */
  dateTimeRange?: DateTimeRangeDto;
  /**
   * 模糊查询字段
   */
  fuzzyFields?: PickTypeClass;
};

export type FilesResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 原始文件名
   */
  originalname: string;
  /**
   * 唯一文件名
   */
  uniquedName: string;
  /**
   * 文件类型
   */
  mimetype: string;
  /**
   * 文件大小
   */
  size: number;
  /**
   * 文件路径
   */
  path: string;
  /**
   * 唯一值
   */
  _id: string;
};

export type FilesPaginationResultDto = {
  /**
   * 当前页面
   */
  pageNo: number;
  /**
   * 分页大小
   */
  pageSize: number;
  /**
   * 所有数量
   */
  total: number;
  /**
   * 所有数量
   */
  list: Array<FilesResultDto>;
};

export type FilesBatchDeleteDto = {
  /**
   * 文件列表
   */
  fileList: Array<FilesResultDto>;
};

export type FileInfo = {
  /**
   * 文件路径
   */
  path: string;
  /**
   * 唯一值
   */
  _id: string;
};

export type FileUpdateDto = {
  file: Blob | File;
  fileInfo: FileInfo;
};

export type ProjectClassificationsCreateBodyDto = {
  /**
   * 分类名称
   */
  name: string;
  /**
   * 分类名称
   */
  description: string;
  /**
   * 用作分类排序
   */
  sort: number;
  /**
   * 分类图片
   */
  picture: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 分类类型
   */
  status: StatusEnum;
};

export type ProjectClassificationsResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 分类名称
   */
  name: string;
  /**
   * 分类名称
   */
  description: string;
  /**
   * 用作分类排序
   */
  sort: number;
  /**
   * 分类图片
   */
  picture: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 分类类型
   */
  status: StatusEnum;
  /**
   * 唯一值
   */
  _id: string;
};

export type ProjectClassificationsUpdateDto = {
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 分类名称
   */
  name?: string;
  /**
   * 分类名称
   */
  description?: string;
  /**
   * 用作分类排序
   */
  sort?: number;
  /**
   * 分类图片
   */
  picture?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 分类类型
   */
  status?: StatusEnum;
};

export type ProjectClassificationsTreeDto = {
  /**
   * 删除时间
   */
  deletedTime?: Date;
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 分类名称
   */
  name: string;
  /**
   * 分类名称
   */
  description: string;
  /**
   * 用作分类排序
   */
  sort: number;
  /**
   * 分类图片
   */
  picture: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 分类类型
   */
  status: StatusEnum;
  /**
   * 唯一值
   */
  _id: string;
  /**
   * 唯一值
   */
  children: Array<ProjectClassificationsTreeDto>;
};

export type ProjectClassificationsQueryDto = {
  /**
   * 创建日期
   */
  createdTime?: Date;
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 分类名称
   */
  name?: string;
  /**
   * 分类名称
   */
  description?: string;
  /**
   * 用作分类排序
   */
  sort?: number;
  /**
   * 分类图片
   */
  picture?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 分类类型
   */
  status?: StatusEnum;
};

export type AuthControllerSignInData = {
  body: SignInDto;
  path?: never;
  query?: never;
  url: '/api/auth/login';
};

export type AuthControllerSignInResponses = {
  /**
   * Token和管理人员信息
   */
  200: LoginSuccessResultDto;
};

export type AuthControllerSignInResponse =
  AuthControllerSignInResponses[keyof AuthControllerSignInResponses];

export type AuthControllerGetProfileData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/auth/profile';
};

export type AuthControllerGetProfileResponses = {
  200: unknown;
};

export type AdmintorsControllerAddOneData = {
  body: AdmintorsCreateBodyDto;
  path?: never;
  query?: never;
  url: '/api/admintors/addOne';
};

export type AdmintorsControllerAddOneErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerAddOneError =
  AdmintorsControllerAddOneErrors[keyof AdmintorsControllerAddOneErrors];

export type AdmintorsControllerAddOneResponses = {
  /**
   * 添加管理人员成功
   */
  200: AdmintorsResultDto;
};

export type AdmintorsControllerAddOneResponse =
  AdmintorsControllerAddOneResponses[keyof AdmintorsControllerAddOneResponses];

export type AdmintorsControllerDeleteByIdsData = {
  body: DeleteIdsDto;
  path?: never;
  query?: never;
  url: '/api/admintors/deleteByIds';
};

export type AdmintorsControllerDeleteByIdsErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerDeleteByIdsError =
  AdmintorsControllerDeleteByIdsErrors[keyof AdmintorsControllerDeleteByIdsErrors];

export type AdmintorsControllerDeleteByIdsResponses = {
  /**
   * 删除成功
   */
  200: IntersectionUpdateResDtoDeleteResDto;
};

export type AdmintorsControllerDeleteByIdsResponse =
  AdmintorsControllerDeleteByIdsResponses[keyof AdmintorsControllerDeleteByIdsResponses];

export type AdmintorsControllerUpdateOneData = {
  body: AdmintorsUpdateDto;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/admintors/updateOne';
};

export type AdmintorsControllerUpdateOneErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerUpdateOneError =
  AdmintorsControllerUpdateOneErrors[keyof AdmintorsControllerUpdateOneErrors];

export type AdmintorsControllerUpdateOneResponses = {
  /**
   * 更新结果
   */
  200: UpdateResDto;
};

export type AdmintorsControllerUpdateOneResponse =
  AdmintorsControllerUpdateOneResponses[keyof AdmintorsControllerUpdateOneResponses];

export type AdmintorsControllerFindByIdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/admintors/findById';
};

export type AdmintorsControllerFindByIdErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerFindByIdError =
  AdmintorsControllerFindByIdErrors[keyof AdmintorsControllerFindByIdErrors];

export type AdmintorsControllerFindByIdResponses = {
  /**
   * 查找成功
   */
  200: AdmintorsResultDto;
};

export type AdmintorsControllerFindByIdResponse =
  AdmintorsControllerFindByIdResponses[keyof AdmintorsControllerFindByIdResponses];

export type AdmintorsControllerGetPageListData = {
  body: AdmintorsFilterDto;
  path?: never;
  query: {
    /**
     * 当前页面
     */
    pageNo: number;
    /**
     * 分页大小
     */
    pageSize: number;
  };
  url: '/api/admintors/getPageList';
};

export type AdmintorsControllerGetPageListErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerGetPageListError =
  AdmintorsControllerGetPageListErrors[keyof AdmintorsControllerGetPageListErrors];

export type AdmintorsControllerGetPageListResponses = {
  /**
   * 获取分页列表
   */
  200: AdmintorPaginationResultDto;
};

export type AdmintorsControllerGetPageListResponse =
  AdmintorsControllerGetPageListResponses[keyof AdmintorsControllerGetPageListResponses];

export type RolesControllerAddOneData = {
  body: RoleCreateBodyDto;
  path?: never;
  query?: never;
  url: '/api/roles/addOne';
};

export type RolesControllerAddOneResponses = {
  /**
   * 添加角色成功
   */
  200: RolesResultDto;
};

export type RolesControllerAddOneResponse =
  RolesControllerAddOneResponses[keyof RolesControllerAddOneResponses];

export type RolesControllerDeleteByIdsData = {
  body: DeleteIdsDto;
  path?: never;
  query?: never;
  url: '/api/roles/deleteByIds';
};

export type RolesControllerDeleteByIdsResponses = {
  /**
   * 删除成功
   */
  default: IntersectionUpdateResDtoDeleteResDto;
};

export type RolesControllerDeleteByIdsResponse =
  RolesControllerDeleteByIdsResponses[keyof RolesControllerDeleteByIdsResponses];

export type RolesControllerUpdateOneData = {
  body: RolesUpdateDto;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/roles/updateOne';
};

export type RolesControllerUpdateOneResponses = {
  /**
   * 更新结果
   */
  default: UpdateResDto;
};

export type RolesControllerUpdateOneResponse =
  RolesControllerUpdateOneResponses[keyof RolesControllerUpdateOneResponses];

export type RolesControllerFindByIdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/roles/findById';
};

export type RolesControllerFindByIdResponses = {
  /**
   * 查找成功
   */
  200: RolesResultDto;
};

export type RolesControllerFindByIdResponse =
  RolesControllerFindByIdResponses[keyof RolesControllerFindByIdResponses];

export type RolesControllerGetPageListData = {
  body: RolesQueryFilterDto;
  path?: never;
  query: {
    /**
     * 当前页面
     */
    pageNo: number;
    /**
     * 分页大小
     */
    pageSize: number;
  };
  url: '/api/roles/getPageList';
};

export type RolesControllerGetPageListResponses = {
  /**
   * 获取分页列表
   */
  200: RoleQueryPaginationResultDto;
};

export type RolesControllerGetPageListResponse =
  RolesControllerGetPageListResponses[keyof RolesControllerGetPageListResponses];

export type RolesControllerGetAllData = {
  body: RolesQueryFilterDto;
  path?: never;
  query?: never;
  url: '/api/roles/getAll';
};

export type RolesControllerGetAllResponses = {
  /**
   * 获取全部角色
   */
  200: Array<RolesResultDto>;
};

export type RolesControllerGetAllResponse =
  RolesControllerGetAllResponses[keyof RolesControllerGetAllResponses];

export type MenusControllerAddOneData = {
  body: MenusCreateBodyDto;
  path?: never;
  query?: never;
  url: '/api/menus/addOne';
};

export type MenusControllerAddOneResponses = {
  /**
   * 添加菜单成功
   */
  200: MenusResultDto;
};

export type MenusControllerAddOneResponse =
  MenusControllerAddOneResponses[keyof MenusControllerAddOneResponses];

export type MenusControllerDeleteByIdsData = {
  body: DeleteIdsDto;
  path?: never;
  query?: never;
  url: '/api/menus/deleteByIds';
};

export type MenusControllerDeleteByIdsResponses = {
  /**
   * 删除成功
   */
  default: IntersectionUpdateResDtoDeleteResDto;
};

export type MenusControllerDeleteByIdsResponse =
  MenusControllerDeleteByIdsResponses[keyof MenusControllerDeleteByIdsResponses];

export type MenusControllerUpdateOneData = {
  body: MenusUpdateDto;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/menus/updateOne';
};

export type MenusControllerUpdateOneResponses = {
  /**
   * 更新结果
   */
  default: UpdateResDto;
};

export type MenusControllerUpdateOneResponse =
  MenusControllerUpdateOneResponses[keyof MenusControllerUpdateOneResponses];

export type MenusControllerFindByIdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/menus/findById';
};

export type MenusControllerFindByIdResponses = {
  /**
   * 查找成功
   */
  200: MenusResultDto;
};

export type MenusControllerFindByIdResponse =
  MenusControllerFindByIdResponses[keyof MenusControllerFindByIdResponses];

export type MenusControllerGetTreeDataData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/menus/getTreeData';
};

export type MenusControllerGetTreeDataResponses = {
  /**
   * 获取树形结构
   */
  200: Array<TreeMenuDataDto>;
};

export type MenusControllerGetTreeDataResponse =
  MenusControllerGetTreeDataResponses[keyof MenusControllerGetTreeDataResponses];

export type MenusControllerGetAllByFilterData = {
  body: MenusQueryDto;
  path?: never;
  query?: never;
  url: '/api/menus/getAllByFilter';
};

export type MenusControllerGetAllByFilterResponses = {
  /**
   * 获取所有菜单
   */
  200: Array<MenusResultDto>;
};

export type MenusControllerGetAllByFilterResponse =
  MenusControllerGetAllByFilterResponses[keyof MenusControllerGetAllByFilterResponses];

export type FilesControllerUploadFileData = {
  /**
   * 多文件上传
   */
  body: FileUploadDto;
  path?: never;
  query?: never;
  url: '/api/files/uploadFile';
};

export type FilesControllerUploadFileErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type FilesControllerUploadFileError =
  FilesControllerUploadFileErrors[keyof FilesControllerUploadFileErrors];

export type FilesControllerUploadFileResponses = {
  /**
   * 多文件上传成功后返回
   */
  200: FileUploadSuccessResultDto;
};

export type FilesControllerUploadFileResponse =
  FilesControllerUploadFileResponses[keyof FilesControllerUploadFileResponses];

export type FilesControllerUploadFilesData = {
  /**
   * 多文件上传
   */
  body: FilesUploadDto;
  path?: never;
  query?: never;
  url: '/api/files/uploadFiles';
};

export type FilesControllerUploadFilesErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type FilesControllerUploadFilesError =
  FilesControllerUploadFilesErrors[keyof FilesControllerUploadFilesErrors];

export type FilesControllerUploadFilesResponses = {
  201: unknown;
};

export type FilesControllerGetPaginationListData = {
  body: FilesQueryFilterDto;
  path?: never;
  query: {
    /**
     * 当前页面
     */
    pageNo: number;
    /**
     * 分页大小
     */
    pageSize: number;
  };
  url: '/api/files/getPaginationList';
};

export type FilesControllerGetPaginationListErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type FilesControllerGetPaginationListError =
  FilesControllerGetPaginationListErrors[keyof FilesControllerGetPaginationListErrors];

export type FilesControllerGetPaginationListResponses = {
  /**
   * 获取分页列表
   */
  200: FilesPaginationResultDto;
};

export type FilesControllerGetPaginationListResponse =
  FilesControllerGetPaginationListResponses[keyof FilesControllerGetPaginationListResponses];

export type FilesControllerBatchDeleteData = {
  body: FilesBatchDeleteDto;
  path?: never;
  query?: never;
  url: '/api/files/batchDelete';
};

export type FilesControllerBatchDeleteErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type FilesControllerBatchDeleteError =
  FilesControllerBatchDeleteErrors[keyof FilesControllerBatchDeleteErrors];

export type FilesControllerBatchDeleteResponses = {
  /**
   * 删除成功
   */
  200: IntersectionUpdateResDtoDeleteResDto;
};

export type FilesControllerBatchDeleteResponse =
  FilesControllerBatchDeleteResponses[keyof FilesControllerBatchDeleteResponses];

export type FilesControllerUpdateFileData = {
  /**
   * 单文件上传
   */
  body: FileUpdateDto;
  path?: never;
  query?: never;
  url: '/api/files/update';
};

export type FilesControllerUpdateFileErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type FilesControllerUpdateFileError =
  FilesControllerUpdateFileErrors[keyof FilesControllerUpdateFileErrors];

export type FilesControllerUpdateFileResponses = {
  /**
   * 更新成功后返回
   */
  200: FileUploadSuccessResultDto;
};

export type FilesControllerUpdateFileResponse =
  FilesControllerUpdateFileResponses[keyof FilesControllerUpdateFileResponses];

export type ProjectClassificationsControllerAddOneData = {
  body: ProjectClassificationsCreateBodyDto;
  path?: never;
  query?: never;
  url: '/api/projectClassifications/addOne';
};

export type ProjectClassificationsControllerAddOneResponses = {
  /**
   * 添加产品分类成功
   */
  200: ProjectClassificationsResultDto;
};

export type ProjectClassificationsControllerAddOneResponse =
  ProjectClassificationsControllerAddOneResponses[keyof ProjectClassificationsControllerAddOneResponses];

export type ProjectClassificationsControllerDeleteByIdsData = {
  body: DeleteIdsDto;
  path?: never;
  query?: never;
  url: '/api/projectClassifications/deleteByIds';
};

export type ProjectClassificationsControllerDeleteByIdsResponses = {
  /**
   * 删除成功
   */
  default: IntersectionUpdateResDtoDeleteResDto;
};

export type ProjectClassificationsControllerDeleteByIdsResponse =
  ProjectClassificationsControllerDeleteByIdsResponses[keyof ProjectClassificationsControllerDeleteByIdsResponses];

export type ProjectClassificationsControllerUpdateOneData = {
  body: ProjectClassificationsUpdateDto;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/projectClassifications/updateOne';
};

export type ProjectClassificationsControllerUpdateOneResponses = {
  /**
   * 更新结果
   */
  default: UpdateResDto;
};

export type ProjectClassificationsControllerUpdateOneResponse =
  ProjectClassificationsControllerUpdateOneResponses[keyof ProjectClassificationsControllerUpdateOneResponses];

export type ProjectClassificationsControllerFindByIdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/projectClassifications/findById';
};

export type ProjectClassificationsControllerFindByIdResponses = {
  /**
   * 查找成功
   */
  200: ProjectClassificationsResultDto;
};

export type ProjectClassificationsControllerFindByIdResponse =
  ProjectClassificationsControllerFindByIdResponses[keyof ProjectClassificationsControllerFindByIdResponses];

export type ProjectClassificationsControllerGetTreeDataData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/projectClassifications/getTreeData';
};

export type ProjectClassificationsControllerGetTreeDataResponses = {
  /**
   * 获取树形结构
   */
  200: Array<ProjectClassificationsTreeDto>;
};

export type ProjectClassificationsControllerGetTreeDataResponse =
  ProjectClassificationsControllerGetTreeDataResponses[keyof ProjectClassificationsControllerGetTreeDataResponses];

export type ProjectClassificationsControllerGetAllByFilterData = {
  body: ProjectClassificationsQueryDto;
  path?: never;
  query?: never;
  url: '/api/projectClassifications/getAllByFilter';
};

export type ProjectClassificationsControllerGetAllByFilterResponses = {
  /**
   * 获取所有产品分类
   */
  200: Array<ProjectClassificationsResultDto>;
};

export type ProjectClassificationsControllerGetAllByFilterResponse =
  ProjectClassificationsControllerGetAllByFilterResponses[keyof ProjectClassificationsControllerGetAllByFilterResponses];

export type ClientOptions = {
  baseUrl: string;
};
