// This file is auto-generated by @hey-api/openapi-ts

export type SignInDto = {
  /**
   * 管理人员名称
   */
  username?: string;
  /**
   * 密码
   */
  password: string;
  /**
   * 邮箱
   */
  email?: string;
};

export type AdmintorsResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 管理人员名称
   */
  username: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 角色
   */
  roles: Array<string>;
  /**
   * 性别
   */
  sex?: 'Male' | 'Female';
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 邮箱
   */
  email: string;
  /**
   * 状态
   */
  status: 'Open' | 'Close';
  /**
   * 唯一值
   */
  _id: string;
};

export type LoginSuccessResultDto = {
  access_token: string;
  userInfo: AdmintorsResultDto;
  menus: Array<string>;
};

export type ErrorResultDto = {
  /**
   * 错误信息
   */
  message: string;
  /**
   * 错误码
   */
  statusCode: number;
};

export type AdmintorsCreateBodyDto = {
  /**
   * 管理人员名称
   */
  username: string;
  /**
   * 密码
   */
  password: string;
  /**
   * 角色
   */
  roles: Array<string>;
};

export type DeleteIdsDto = {
  /**
   * 删除Id列表
   */
  ids: Array<string>;
};

export type IntersectionUpdateResDtoDeleteResDto = {
  /**
   * 是否成功
   */
  acknowledged: boolean;
  /**
   * 更新数量
   */
  modifiedCount?: number;
  /**
   * 更新插入id
   */
  upsertedId?: string;
  /**
   * 更新插入数量
   */
  upsertedCount?: number;
  /**
   * 符合更新条件的数量
   */
  matchedCount?: number;
  /**
   * 匹配数量
   */
  deletedCount?: number;
};

export type AdmintorsUpdateDto = {
  /**
   * 管理人员名称
   */
  username?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 角色
   */
  roles?: Array<string>;
  /**
   * 性别
   */
  sex?: 'Male' | 'Female';
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 邮箱
   */
  email?: string;
  /**
   * 状态
   */
  status?: 'Open' | 'Close';
};

export type UpdateResDto = {
  /**
   * 是否成功
   */
  acknowledged: boolean;
  /**
   * 更新数量
   */
  modifiedCount?: number;
  /**
   * 更新插入id
   */
  upsertedId?: string;
  /**
   * 更新插入数量
   */
  upsertedCount?: number;
  /**
   * 符合更新条件的数量
   */
  matchedCount?: number;
};

export type AdmintorsFilterDto = {
  /**
   * 创建日期
   */
  createdTime?: Date;
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 管理人员名称
   */
  username?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 角色
   */
  roles?: Array<string>;
  /**
   * 性别
   */
  sex?: 'Male' | 'Female';
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 邮箱
   */
  email?: string;
  /**
   * 状态
   */
  status?: 'Open' | 'Close';
};

export type RolesResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 角色名称
   */
  name: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 页面操作权限
   */
  permissionAuthority: Array<'Create' | 'Delete' | 'Update' | 'Query'>;
  /**
   * 菜单
   */
  menus: Array<string>;
  /**
   * 唯一值
   */
  _id: string;
};

export type AdmintorsPageItemDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 管理人员名称
   */
  username: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 姓名
   */
  name?: string;
  /**
   * 性别
   */
  sex?: 'Male' | 'Female';
  /**
   * 电话号码
   */
  phone?: string;
  /**
   * 邮箱
   */
  email: string;
  /**
   * 状态
   */
  status: 'Open' | 'Close';
  /**
   * 唯一值
   */
  _id: string;
  /**
   * 角色列表
   */
  roles: Array<RolesResultDto>;
};

export type AdmintorPaginationResultDto = {
  /**
   * 当前页面
   */
  pageNo: number;
  /**
   * 分页大小
   */
  pageSize: number;
  /**
   * 所有数量
   */
  total: number;
  /**
   * 所有数量
   */
  list: Array<AdmintorsPageItemDto>;
};

export type RoleCreateBodyDto = {
  /**
   * 角色名称
   */
  name: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 页面操作权限
   */
  permissionAuthority: Array<'Create' | 'Delete' | 'Update' | 'Query'>;
  /**
   * 菜单
   */
  menus: Array<string>;
};

export type RolesUpdateDto = {
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 角色名称
   */
  name?: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 页面操作权限
   */
  permissionAuthority?: Array<'Create' | 'Delete' | 'Update' | 'Query'>;
  /**
   * 菜单
   */
  menus?: Array<string>;
};

export type RolesQueryFilterDto = {
  /**
   * 创建日期
   */
  createdTime?: Date;
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 角色名称
   */
  name?: string;
  /**
   * 角色名称
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 页面操作权限
   */
  permissionAuthority?: Array<'Create' | 'Delete' | 'Update' | 'Query'>;
  /**
   * 菜单
   */
  menus?: Array<string>;
};

export type RoleQueryPaginationResultDto = {
  /**
   * 当前页面
   */
  pageNo: number;
  /**
   * 分页大小
   */
  pageSize: number;
  /**
   * 所有数量
   */
  total: number;
  /**
   * 所有数量
   */
  list: Array<RolesResultDto>;
};

export type MenusCreateBodyDto = {
  /**
   * 菜单名称
   */
  name: string;
  /**
   * 菜单唯一键
   */
  uniqueKey: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径
   */
  path: string;
  /**
   * 用作菜单排序
   */
  sort: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
};

export type MenusResultDto = {
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 菜单名称
   */
  name: string;
  /**
   * 菜单唯一键
   */
  uniqueKey: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径
   */
  path: string;
  /**
   * 用作菜单排序
   */
  sort: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 唯一值
   */
  _id: string;
};

export type MenusUpdateDto = {
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 菜单名称
   */
  name?: string;
  /**
   * 菜单唯一键
   */
  uniqueKey?: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径
   */
  path?: string;
  /**
   * 用作菜单排序
   */
  sort?: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
};

export type TreeMenuDataDto = {
  /**
   * 删除时间
   */
  deletedTime?: Date;
  /**
   * 创建日期
   */
  createdTime: Date;
  /**
   * 更新日期
   */
  updatedTime: Date;
  /**
   * 菜单名称
   */
  name: string;
  /**
   * 菜单唯一键
   */
  uniqueKey: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径
   */
  path: string;
  /**
   * 用作菜单排序
   */
  sort: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
  /**
   * 唯一值
   */
  _id: string;
  /**
   * 唯一值
   */
  children: Array<TreeMenuDataDto>;
};

export type MenusQueryDto = {
  /**
   * 创建日期
   */
  createdTime?: Date;
  /**
   * 更新日期
   */
  updatedTime?: Date;
  /**
   * 菜单名称
   */
  name?: string;
  /**
   * 菜单唯一键
   */
  uniqueKey?: string;
  /**
   * 菜单名称
   */
  description?: string;
  /**
   * 菜单路径
   */
  path?: string;
  /**
   * 用作菜单排序
   */
  sort?: number;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 图标
   */
  parent?: string;
};

export type FileUploadDto = {
  file: Blob | File;
};

export type FileUploadSuccessResultDto = {
  /**
   * 图片地址
   */
  url: string;
};

export type FilesUploadDto = {
  files: Array<Blob | File>;
};

export type QueryDirsFilterDto = {
  /**
   * 路径
   */
  dirPath?: string;
};

export type QueryDirsPaginationResultDto = {
  /**
   * 当前页面
   */
  pageNo?: number;
  /**
   * 分页大小
   */
  pageSize?: number;
  /**
   * 所有数量
   */
  total?: number;
  /**
   * 列表
   */
  list: Array<string>;
};

export type AuthControllerSignInData = {
  body: SignInDto;
  path?: never;
  query?: never;
  url: '/api/auth/login';
};

export type AuthControllerSignInResponses = {
  /**
   * Token和管理人员信息
   */
  200: LoginSuccessResultDto;
};

export type AuthControllerSignInResponse =
  AuthControllerSignInResponses[keyof AuthControllerSignInResponses];

export type AuthControllerGetProfileData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/auth/profile';
};

export type AuthControllerGetProfileResponses = {
  200: unknown;
};

export type AdmintorsControllerAddOneData = {
  body: AdmintorsCreateBodyDto;
  path?: never;
  query?: never;
  url: '/api/admintors/addOne';
};

export type AdmintorsControllerAddOneErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerAddOneError =
  AdmintorsControllerAddOneErrors[keyof AdmintorsControllerAddOneErrors];

export type AdmintorsControllerAddOneResponses = {
  /**
   * 添加管理人员成功
   */
  200: AdmintorsResultDto;
};

export type AdmintorsControllerAddOneResponse =
  AdmintorsControllerAddOneResponses[keyof AdmintorsControllerAddOneResponses];

export type AdmintorsControllerDeleteByIdsData = {
  body: DeleteIdsDto;
  path?: never;
  query?: never;
  url: '/api/admintors/deleteByIds';
};

export type AdmintorsControllerDeleteByIdsErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerDeleteByIdsError =
  AdmintorsControllerDeleteByIdsErrors[keyof AdmintorsControllerDeleteByIdsErrors];

export type AdmintorsControllerDeleteByIdsResponses = {
  /**
   * 删除成功
   */
  200: IntersectionUpdateResDtoDeleteResDto;
};

export type AdmintorsControllerDeleteByIdsResponse =
  AdmintorsControllerDeleteByIdsResponses[keyof AdmintorsControllerDeleteByIdsResponses];

export type AdmintorsControllerUpdateOneData = {
  body: AdmintorsUpdateDto;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/admintors/updateOne';
};

export type AdmintorsControllerUpdateOneErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerUpdateOneError =
  AdmintorsControllerUpdateOneErrors[keyof AdmintorsControllerUpdateOneErrors];

export type AdmintorsControllerUpdateOneResponses = {
  /**
   * 更新结果
   */
  200: UpdateResDto;
};

export type AdmintorsControllerUpdateOneResponse =
  AdmintorsControllerUpdateOneResponses[keyof AdmintorsControllerUpdateOneResponses];

export type AdmintorsControllerFindByIdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/admintors/findById';
};

export type AdmintorsControllerFindByIdErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerFindByIdError =
  AdmintorsControllerFindByIdErrors[keyof AdmintorsControllerFindByIdErrors];

export type AdmintorsControllerFindByIdResponses = {
  /**
   * 查找成功
   */
  200: AdmintorsResultDto;
};

export type AdmintorsControllerFindByIdResponse =
  AdmintorsControllerFindByIdResponses[keyof AdmintorsControllerFindByIdResponses];

export type AdmintorsControllerGetPageListData = {
  body: AdmintorsFilterDto;
  path?: never;
  query: {
    /**
     * 当前页面
     */
    pageNo: number;
    /**
     * 分页大小
     */
    pageSize: number;
  };
  url: '/api/admintors/getPageList';
};

export type AdmintorsControllerGetPageListErrors = {
  /**
   * 失败
   */
  400: ErrorResultDto;
};

export type AdmintorsControllerGetPageListError =
  AdmintorsControllerGetPageListErrors[keyof AdmintorsControllerGetPageListErrors];

export type AdmintorsControllerGetPageListResponses = {
  /**
   * 获取分页列表
   */
  200: AdmintorPaginationResultDto;
};

export type AdmintorsControllerGetPageListResponse =
  AdmintorsControllerGetPageListResponses[keyof AdmintorsControllerGetPageListResponses];

export type RolesControllerAddOneData = {
  body: RoleCreateBodyDto;
  path?: never;
  query?: never;
  url: '/api/roles/addOne';
};

export type RolesControllerAddOneResponses = {
  /**
   * 添加角色成功
   */
  200: RolesResultDto;
};

export type RolesControllerAddOneResponse =
  RolesControllerAddOneResponses[keyof RolesControllerAddOneResponses];

export type RolesControllerDeleteByIdsData = {
  body: DeleteIdsDto;
  path?: never;
  query?: never;
  url: '/api/roles/deleteByIds';
};

export type RolesControllerDeleteByIdsResponses = {
  /**
   * 删除成功
   */
  default: IntersectionUpdateResDtoDeleteResDto;
};

export type RolesControllerDeleteByIdsResponse =
  RolesControllerDeleteByIdsResponses[keyof RolesControllerDeleteByIdsResponses];

export type RolesControllerUpdateOneData = {
  body: RolesUpdateDto;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/roles/updateOne';
};

export type RolesControllerUpdateOneResponses = {
  /**
   * 更新结果
   */
  default: UpdateResDto;
};

export type RolesControllerUpdateOneResponse =
  RolesControllerUpdateOneResponses[keyof RolesControllerUpdateOneResponses];

export type RolesControllerFindByIdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/roles/findById';
};

export type RolesControllerFindByIdResponses = {
  /**
   * 查找成功
   */
  200: RolesResultDto;
};

export type RolesControllerFindByIdResponse =
  RolesControllerFindByIdResponses[keyof RolesControllerFindByIdResponses];

export type RolesControllerGetPageListData = {
  body: RolesQueryFilterDto;
  path?: never;
  query: {
    /**
     * 当前页面
     */
    pageNo: number;
    /**
     * 分页大小
     */
    pageSize: number;
  };
  url: '/api/roles/getPageList';
};

export type RolesControllerGetPageListResponses = {
  /**
   * 获取分页列表
   */
  200: RoleQueryPaginationResultDto;
};

export type RolesControllerGetPageListResponse =
  RolesControllerGetPageListResponses[keyof RolesControllerGetPageListResponses];

export type RolesControllerGetAllData = {
  body: RolesQueryFilterDto;
  path?: never;
  query?: never;
  url: '/api/roles/getAll';
};

export type RolesControllerGetAllResponses = {
  /**
   * 获取全部角色
   */
  200: Array<RolesResultDto>;
};

export type RolesControllerGetAllResponse =
  RolesControllerGetAllResponses[keyof RolesControllerGetAllResponses];

export type MenusControllerAddOneData = {
  body: MenusCreateBodyDto;
  path?: never;
  query?: never;
  url: '/api/menus/addOne';
};

export type MenusControllerAddOneResponses = {
  /**
   * 添加菜单成功
   */
  200: MenusResultDto;
};

export type MenusControllerAddOneResponse =
  MenusControllerAddOneResponses[keyof MenusControllerAddOneResponses];

export type MenusControllerDeleteByIdsData = {
  body: DeleteIdsDto;
  path?: never;
  query?: never;
  url: '/api/menus/deleteByIds';
};

export type MenusControllerDeleteByIdsResponses = {
  /**
   * 删除成功
   */
  default: IntersectionUpdateResDtoDeleteResDto;
};

export type MenusControllerDeleteByIdsResponse =
  MenusControllerDeleteByIdsResponses[keyof MenusControllerDeleteByIdsResponses];

export type MenusControllerUpdateOneData = {
  body: MenusUpdateDto;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/menus/updateOne';
};

export type MenusControllerUpdateOneResponses = {
  /**
   * 更新结果
   */
  default: UpdateResDto;
};

export type MenusControllerUpdateOneResponse =
  MenusControllerUpdateOneResponses[keyof MenusControllerUpdateOneResponses];

export type MenusControllerFindByIdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * 唯一值
     */
    id: string;
  };
  url: '/api/menus/findById';
};

export type MenusControllerFindByIdResponses = {
  /**
   * 查找成功
   */
  200: MenusResultDto;
};

export type MenusControllerFindByIdResponse =
  MenusControllerFindByIdResponses[keyof MenusControllerFindByIdResponses];

export type MenusControllerGetTreeDataData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/menus/getTreeData';
};

export type MenusControllerGetTreeDataResponses = {
  /**
   * 获取树形结构
   */
  200: Array<TreeMenuDataDto>;
};

export type MenusControllerGetTreeDataResponse =
  MenusControllerGetTreeDataResponses[keyof MenusControllerGetTreeDataResponses];

export type MenusControllerGetAllByFilterData = {
  body: MenusQueryDto;
  path?: never;
  query?: never;
  url: '/api/menus/getAllByFilter';
};

export type MenusControllerGetAllByFilterResponses = {
  /**
   * 获取所有菜单
   */
  200: Array<MenusResultDto>;
};

export type MenusControllerGetAllByFilterResponse =
  MenusControllerGetAllByFilterResponses[keyof MenusControllerGetAllByFilterResponses];

export type FilesControllerUploadFileData = {
  /**
   * 单文件上传
   */
  body: FileUploadDto;
  path?: never;
  query?: never;
  url: '/api/files/uploadFile';
};

export type FilesControllerUploadFileResponses = {
  /**
   * 单文件上传成功后返回
   */
  200: FileUploadSuccessResultDto;
};

export type FilesControllerUploadFileResponse =
  FilesControllerUploadFileResponses[keyof FilesControllerUploadFileResponses];

export type FilesControllerUploadFilesData = {
  /**
   * 多文件上传
   */
  body: FilesUploadDto;
  path?: never;
  query?: never;
  url: '/api/files/uploadFiles';
};

export type FilesControllerUploadFilesResponses = {
  201: unknown;
};

export type FilesControllerGetDirsPaginationData = {
  body: QueryDirsFilterDto;
  path?: never;
  query?: {
    /**
     * 当前页面
     */
    pageNo?: number;
    /**
     * 分页大小
     */
    pageSize?: number;
  };
  url: '/api/files/getDirsPagination';
};

export type FilesControllerGetDirsPaginationResponses = {
  /**
   * 获取分页列表
   */
  200: QueryDirsPaginationResultDto;
};

export type FilesControllerGetDirsPaginationResponse =
  FilesControllerGetDirsPaginationResponses[keyof FilesControllerGetDirsPaginationResponses];

export type ClientOptions = {
  baseUrl: string;
};
