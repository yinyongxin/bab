// This file is auto-generated by @hey-api/openapi-ts

export const SignInDtoSchema = {
    type: 'object',
    properties: {
        username: {
            type: 'string',
            description: '管理人员名称',
            example: 'username'
        },
        password: {
            type: 'string',
            description: '密码',
            example: '123456'
        }
    },
    required: ['username', 'password']
} as const;

export const ResultAdmintorDtoSchema = {
    type: 'object',
    properties: {
        createdTime: {
            format: 'date-time',
            type: 'string',
            description: '创建日期',
            default: 1728398127347
        },
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        username: {
            type: 'string',
            description: '管理人员名称',
            example: 'admin'
        },
        avatar: {
            type: 'string',
            description: '头像',
            example: ''
        },
        name: {
            type: 'string',
            description: '姓名',
            example: ''
        },
        sex: {
            type: 'string',
            description: '年龄',
            example: 'Male',
            enum: ['Male', 'Female']
        },
        phone: {
            type: 'string',
            description: '电话号码',
            example: ''
        },
        email: {
            type: 'string',
            description: '邮箱',
            example: ''
        },
        status: {
            type: 'string',
            description: '状态',
            example: 'Open',
            enum: ['Open', 'Close']
        },
        _id: {
            type: 'string',
            description: '唯一值'
        }
    },
    required: ['createdTime', 'updatedTime', 'username', 'status', '_id']
} as const;

export const CreateAdmintorBodyDtoSchema = {
    type: 'object',
    properties: {
        username: {
            type: 'string',
            description: '管理人员名称',
            example: 'admin'
        },
        password: {
            type: 'string',
            description: '密码',
            example: '123456'
        }
    },
    required: ['username', 'password']
} as const;

export const DeleteIdsDtoSchema = {
    type: 'object',
    properties: {
        ids: {
            description: '删除Id列表',
            type: 'array',
            items: {
                type: 'string'
            }
        }
    },
    required: ['ids']
} as const;

export const IntersectionUpdateResDtoDeleteResDtoSchema = {
    type: 'object',
    properties: {
        acknowledged: {
            type: 'boolean',
            description: '是否成功'
        },
        modifiedCount: {
            type: 'number',
            description: '更新数量'
        },
        upsertedId: {
            type: 'string',
            description: '更新插入id'
        },
        upsertedCount: {
            type: 'number',
            description: '更新插入数量'
        },
        matchedCount: {
            type: 'number',
            description: '符合更新条件的数量'
        },
        deletedCount: {
            type: 'number',
            description: '匹配数量'
        }
    },
    required: ['acknowledged']
} as const;

export const UpdateAdmintorDtoSchema = {
    type: 'object',
    properties: {
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        username: {
            type: 'string',
            description: '管理人员名称',
            example: 'admin'
        },
        avatar: {
            type: 'string',
            description: '头像',
            example: ''
        },
        name: {
            type: 'string',
            description: '姓名',
            example: ''
        },
        sex: {
            type: 'string',
            description: '年龄',
            example: 'Male',
            enum: ['Male', 'Female']
        },
        phone: {
            type: 'string',
            description: '电话号码',
            example: ''
        },
        email: {
            type: 'string',
            description: '邮箱',
            example: ''
        },
        status: {
            type: 'string',
            description: '状态',
            example: 'Open',
            enum: ['Open', 'Close']
        }
    }
} as const;

export const UpdateResDtoSchema = {
    type: 'object',
    properties: {
        acknowledged: {
            type: 'boolean',
            description: '是否成功'
        },
        modifiedCount: {
            type: 'number',
            description: '更新数量'
        },
        upsertedId: {
            type: 'string',
            description: '更新插入id'
        },
        upsertedCount: {
            type: 'number',
            description: '更新插入数量'
        },
        matchedCount: {
            type: 'number',
            description: '符合更新条件的数量'
        }
    },
    required: ['acknowledged']
} as const;

export const QueryAdmintorDtoSchema = {
    type: 'object',
    properties: {
        createdTime: {
            format: 'date-time',
            type: 'string',
            description: '创建日期',
            default: 1728398127347
        },
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        username: {
            type: 'string',
            description: '管理人员名称',
            example: 'admin'
        },
        avatar: {
            type: 'string',
            description: '头像',
            example: ''
        },
        name: {
            type: 'string',
            description: '姓名',
            example: ''
        },
        sex: {
            type: 'string',
            description: '年龄',
            example: 'Male',
            enum: ['Male', 'Female']
        },
        phone: {
            type: 'string',
            description: '电话号码',
            example: ''
        },
        email: {
            type: 'string',
            description: '邮箱',
            example: ''
        },
        status: {
            type: 'string',
            description: '状态',
            example: 'Open',
            enum: ['Open', 'Close']
        }
    }
} as const;

export const AdmintorPaginationQueryResultDtoSchema = {
    type: 'object',
    properties: {
        pageNo: {
            type: 'number',
            description: '当前页面',
            minimum: 1,
            example: 1
        },
        pageSize: {
            type: 'number',
            description: '分页大小',
            minimum: 1,
            example: 10
        },
        total: {
            type: 'number',
            description: '所有数量',
            example: 1
        },
        list: {
            description: '所有数量',
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ResultAdmintorDto'
            }
        }
    },
    required: ['pageNo', 'pageSize', 'total', 'list']
} as const;

export const CreateRoleBodyDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            description: '角色名称',
            example: 'role'
        },
        description: {
            type: 'string',
            description: '角色名称',
            example: '我是角色描述'
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        }
    },
    required: ['name']
} as const;

export const ResultRoleDtoSchema = {
    type: 'object',
    properties: {
        createdTime: {
            format: 'date-time',
            type: 'string',
            description: '创建日期',
            default: 1728398127347
        },
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        name: {
            type: 'string',
            description: '角色名称',
            example: 'role'
        },
        description: {
            type: 'string',
            description: '角色名称',
            example: '我是角色描述'
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        },
        _id: {
            type: 'string',
            description: '唯一值'
        }
    },
    required: ['createdTime', 'updatedTime', 'name', '_id']
} as const;

export const UpdateRoleDtoSchema = {
    type: 'object',
    properties: {
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        name: {
            type: 'string',
            description: '角色名称',
            example: 'role'
        },
        description: {
            type: 'string',
            description: '角色名称',
            example: '我是角色描述'
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        }
    }
} as const;

export const QueryRoleDtoSchema = {
    type: 'object',
    properties: {
        createdTime: {
            format: 'date-time',
            type: 'string',
            description: '创建日期',
            default: 1728398127347
        },
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        name: {
            type: 'string',
            description: '角色名称',
            example: 'role'
        },
        description: {
            type: 'string',
            description: '角色名称',
            example: '我是角色描述'
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        }
    }
} as const;

export const RolePaginationQueryResultDtoSchema = {
    type: 'object',
    properties: {
        pageNo: {
            type: 'number',
            description: '当前页面',
            minimum: 1,
            example: 1
        },
        pageSize: {
            type: 'number',
            description: '分页大小',
            minimum: 1,
            example: 10
        },
        total: {
            type: 'number',
            description: '所有数量',
            example: 1
        },
        list: {
            description: '所有数量',
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ResultRoleDto'
            }
        }
    },
    required: ['pageNo', 'pageSize', 'total', 'list']
} as const;

export const CreateMenuBodyDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            description: '菜单名称',
            example: 'menuName'
        },
        description: {
            type: 'string',
            description: '菜单名称',
            example: '我是菜单描述'
        },
        path: {
            type: 'string',
            description: '菜单路径',
            example: ''
        },
        sort: {
            type: 'number',
            description: '用作菜单排序',
            example: 0
        },
        pageAuthority: {
            type: 'string',
            description: '页面权限',
            example: ['Open', 'Delete', 'Update', 'Query'],
            enum: ['Open', 'Delete', 'Update', 'Query']
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        },
        parent: {
            type: 'string',
            description: '图标',
            example: null
        }
    },
    required: ['name', 'path', 'sort']
} as const;

export const ResultMenuDtoSchema = {
    type: 'object',
    properties: {
        createdTime: {
            format: 'date-time',
            type: 'string',
            description: '创建日期',
            default: 1728398127347
        },
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        name: {
            type: 'string',
            description: '菜单名称',
            example: 'menuName'
        },
        description: {
            type: 'string',
            description: '菜单名称',
            example: '我是菜单描述'
        },
        path: {
            type: 'string',
            description: '菜单路径',
            example: ''
        },
        sort: {
            type: 'number',
            description: '用作菜单排序',
            example: 0
        },
        pageAuthority: {
            type: 'string',
            description: '页面权限',
            example: ['Open', 'Delete', 'Update', 'Query'],
            enum: ['Open', 'Delete', 'Update', 'Query']
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        },
        parent: {
            type: 'string',
            description: '图标',
            example: null
        },
        _id: {
            type: 'string',
            description: '唯一值'
        }
    },
    required: ['createdTime', 'updatedTime', 'name', 'path', 'sort', '_id']
} as const;

export const UpdateMenuDtoSchema = {
    type: 'object',
    properties: {
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        name: {
            type: 'string',
            description: '菜单名称',
            example: 'menuName'
        },
        description: {
            type: 'string',
            description: '菜单名称',
            example: '我是菜单描述'
        },
        path: {
            type: 'string',
            description: '菜单路径',
            example: ''
        },
        sort: {
            type: 'number',
            description: '用作菜单排序',
            example: 0
        },
        pageAuthority: {
            type: 'string',
            description: '页面权限',
            example: ['Open', 'Delete', 'Update', 'Query'],
            enum: ['Open', 'Delete', 'Update', 'Query']
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        },
        parent: {
            type: 'string',
            description: '图标',
            example: null
        }
    }
} as const;

export const TreeMenuDataDtoSchema = {
    type: 'object',
    properties: {
        deletedTime: {
            format: 'date-time',
            type: 'string',
            description: '删除时间',
            default: null,
            readOnly: true
        },
        createdTime: {
            format: 'date-time',
            type: 'string',
            description: '创建日期',
            default: 1728398127347
        },
        updatedTime: {
            format: 'date-time',
            type: 'string',
            description: '更新日期',
            default: 1728398127348
        },
        name: {
            type: 'string',
            description: '菜单名称',
            example: 'menuName'
        },
        description: {
            type: 'string',
            description: '菜单名称',
            example: '我是菜单描述'
        },
        path: {
            type: 'string',
            description: '菜单路径',
            example: ''
        },
        sort: {
            type: 'number',
            description: '用作菜单排序',
            example: 0
        },
        pageAuthority: {
            type: 'string',
            description: '页面权限',
            example: ['Open', 'Delete', 'Update', 'Query'],
            enum: ['Open', 'Delete', 'Update', 'Query']
        },
        icon: {
            type: 'string',
            description: '图标',
            example: ''
        },
        parent: {
            type: 'string',
            description: '图标',
            example: null
        },
        _id: {
            type: 'string',
            description: '唯一值'
        },
        children: {
            description: '唯一值',
            examples: [],
            type: 'array',
            items: {
                '$ref': '#/components/schemas/TreeMenuDataDto'
            }
        }
    },
    required: ['createdTime', 'updatedTime', 'name', 'path', 'sort', '_id', 'children']
} as const;